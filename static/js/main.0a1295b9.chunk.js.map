{"version":3,"sources":["requests/index.js","context/AssetContext.js","components/Sidebar.js","components/MainList.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["assetRequest","getAllAssets","a","axios","get","baseURL","response","data","getAssetById","id","AssetContext","createContext","AssetContextProvider","children","useState","assetData","setAssetData","getAllAssetsList","assets","useEffect","Provider","value","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Sidebar","classes","className","List","component","aria-label","ListItem","button","ListItemText","primary","media","height","cardHeight","cardActionHeight","MainList","context","useContext","undefined","Error","useAssetAPI","setAssets","console","log","length","Grid","container","spacing","style","map","asset","item","xs","md","lg","Card","CardActionArea","CardMedia","image","image_url","title","asset_contract","name","CardContent","Typography","gutterBottom","variant","color","description","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1295b9.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseURL = \"https://cors.bridged.cc/https://api.opensea.io/\";\n\nconst assetRequest = () => {\n  const getAllAssets = async () => {\n    try {\n      const response = await axios.get(baseURL + \"api/v1/assets\");\n      return response.data;\n    } catch(error) {\n      return error;\n    }\n  }\n\n  const getAssetById = async (id) => {\n    // try {\n    //   const response = await axios.get(baseURL + \"api/v1/assets\");\n    //   return response.data;\n    // } catch(error) {\n    //   return error;\n    // }\n  }\n\n  return {\n    getAllAssets,\n    getAssetById\n  }\n}\n\nexport default assetRequest;\n","import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport assetRequest from \"../requests/index\";\n\nconst AssetContext = createContext();\n\nexport function AssetContextProvider({ children }) {\n  const [assetData, setAssetData] = useState([]);\n\n  const { getAllAssets } = assetRequest();\n\n  const getAllAssetsList = async() => {\n    const response = await getAllAssets();\n    setAssetData(response.assets);\n  }\n\n  useEffect(() => {\n    getAllAssetsList();\n  }, []);\n\n  return(\n    <AssetContext.Provider value={{assetData}}>\n      {children}\n    </AssetContext.Provider>\n  )\n}\n\n// create a hook to use the AssetContext\nexport function useAssetAPI() {\n  const context = useContext(AssetContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be within a Provider\");\n  }\n\n  return context;\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useAssetAPI } from \"../context/AssetContext\";\nimport assetRequest from \"../requests\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return(\n    <>\n      <div className={classes.root}>\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          <ListItem button>\n            <ListItemText primary=\"Assets\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bundles\" />\n          </ListItem>\n        </List>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAssetAPI } from \"../context/AssetContext\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 260,\n  },\n  cardHeight: {\n    height: 400\n  },\n  cardActionHeight: {\n    height: \"100%\"\n  }\n});\n\n\nexport default function MainList() {\n  const classes = useStyles();\n  const { assetData } = useAssetAPI();\n\n  const [assets, setAssets] = useState(assetData);\n\n  console.log(\"main\", assets);\n\n  useEffect(() => {\n    setAssets(assetData)\n  }, [assetData])\n\n  return(\n    <>\n    { assetData.length !== 0 &&\n      <Grid container spacing={3} style={{width: \"100%\"}}>\n        {assets.map(asset => (\n          <Grid item xs={12} md={4} lg={3} key={asset.id}>\n            <Card className={classes.cardHeight}>\n              <CardActionArea className={classes.cardActionHeight}>\n                <CardMedia\n                  className={classes.media}\n                  image={asset.image_url}\n                  title={asset.asset_contract.name}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h6\" component=\"h5\">\n                    {asset.name} {asset.id}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {asset.description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    }\n    </>\n  );\n}\n","import React from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport Grid from '@material-ui/core/Grid';\nimport MainList from \"../components/MainList\";\nimport { AssetContextProvider } from \"../context/AssetContext\";\n\nexport default function Home() {\n  return(\n    <>\n      <AssetContextProvider>\n        <Grid container spacing={3}>\n          <Grid item xs={4} md={2}>\n            <Sidebar />\n          </Grid>\n          <Grid item xs={8} md={10}>\n            <MainList />\n          </Grid>\n        </Grid>\n      </AssetContextProvider>\n    </>\n  );\n}\n","import Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}